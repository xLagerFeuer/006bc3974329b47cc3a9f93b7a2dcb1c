openapi: 3.0.1
info:
  title: Nest Application API
  description: API documentation for the Nest application
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/user:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
  /api/user/{idOrEmail}:
    parameters:
      - name: idOrEmail
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user by ID or Email
      responses:
        '200':
          description: A single user
    patch:
      summary: Update user by ID or Email
      responses:
        '200':
          description: Updated user
  /api/user/{id}:
    delete:
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted user
  /api/auth/register:
    post:
      summary: Register a new user
      responses:
        '201':
          description: User registered
  /api/auth/login:
    post:
      summary: Login user
      responses:
        '200':
          description: User logged in
  /api/auth/logout:
    get:
      summary: Logout user
      responses:
        '200':
          description: User logged out
  /api/auth/refresh-tokens:
    get:
      summary: Refresh authentication tokens
      responses:
        '200':
          description: Tokens refreshed
  /api/worker:
    post:
      summary: Create a new worker
      responses:
        '201':
          description: Worker created
    get:
      summary: Get all workers
      responses:
        '200':
          description: A list of workers
  /api/worker/{id}:
    get:
      summary: Get worker by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single worker
    put:
      summary: Update worker by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated worker
    delete:
      summary: Delete worker by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted worker
  /api/vacancy:
    post:
      summary: Create a new vacancy
      responses:
        '201':
          description: Vacancy created
    get:
      summary: Get all vacancies
      responses:
        '200':
          description: A list of vacancies
  /api/vacancy/{id}:
    get:
      summary: Get vacancy by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single vacancy
    put:
      summary: Update vacancy by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated vacancy
    delete:
      summary: Delete vacancy by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted vacancy
  /api/shift:
    post:
      summary: Create a new shift
      responses:
        '201':
          description: Shift created
    get:
      summary: Get all shifts
      responses:
        '200':
          description: A list of shifts
  /api/shift/{id}:
    get:
      summary: Get shift by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single shift
    put:
      summary: Update shift by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated shift
    delete:
      summary: Delete shift by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted shift
  /api/interview:
    post:
      summary: Create a new interview
      responses:
        '201':
          description: Interview created
    get:
      summary: Get all interviews
      responses:
        '200':
          description: A list of interviews
  /api/interview/{id}:
    get:
      summary: Get interview by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single interview
    put:
      summary: Update interview by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated interview
    delete:
      summary: Delete interview by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted interview
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        img:
          type: string
        provider:
          type: string
          enum:
            - GOOGLE
            - YANDEX
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - USER
        Token:
          type: array
          items:
            $ref: '#/components/schemas/Token'
    Token:
      type: object
      properties:
        token:
          type: string
        exp:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        userId:
          type: string
        userAgent:
          type: string
    Worker:
      type: object
      properties:
        id:
          type: string
        img:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        telegram:
          type: string
        whatsapp:
          type: string
        position:
          type: string
        about:
          type: string
        experience:
          type: string
        date:
          type: string
          format: date-time
    Vacancy:
      type: object
      properties:
        id:
          type: string
        companyName:
          type: string
        jobTitle:
          type: string
        count:
          type: string
        location:
          type: string
        workTime:
          type: string
        salary:
          type: string
        date:
          type: string
          format: date-time
        description:
          type: string
        type:
          type: string
          enum:
            - LOW
            - HIGH
    Shift:
      type: object
      properties:
        id:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        name:
          type: string
        progress:
          type: integer
        type:
          type: string
        hideChildren:
          type: boolean
        displayOrder:
          type: integer
    Interview:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        count:
          type: string
        date:
          type: string
          format: date-time